/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Alias {
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "inboxId")]
    pub inbox_id: String,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "pendingEmailAddress", skip_serializing_if = "Option::is_none")]
    pub pending_email_address: Option<String>,
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    #[serde(rename = "useThreads", skip_serializing_if = "Option::is_none")]
    pub use_threads: Option<bool>,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "verifiedEmailAddress", skip_serializing_if = "Option::is_none")]
    pub verified_email_address: Option<String>,
}

impl Alias {
    pub fn new(created_at: String, inbox_id: String, updated_at: String, user_id: String) -> Alias {
        Alias {
            created_at,
            id: None,
            inbox_id,
            name: None,
            pending_email_address: None,
            updated_at,
            use_threads: None,
            user_id,
            verified_email_address: None,
        }
    }
}


